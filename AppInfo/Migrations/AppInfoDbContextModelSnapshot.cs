// <auto-generated />
using System;
using AppInfo.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppInfo.Migrations
{
    [DbContext(typeof(AppInfoDbContext))]
    partial class AppInfoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppInfo.Entity.Announcements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("AppInfo.Entity.Debt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DebtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("FlatNumber")
                        .HasColumnType("smallint");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FlatNumber");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("AppInfo.Entity.Expenses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("AppInfo.Entity.Flats", b =>
                {
                    b.Property<short>("FlatNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Floor")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsBaloncy")
                        .HasColumnType("bit");

                    b.Property<short>("NoRooms")
                        .HasColumnType("smallint");

                    b.HasKey("FlatNumber");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("AppInfo.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("FlatNumber")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlatNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AppInfo.Entity.Announcements", b =>
                {
                    b.HasOne("AppInfo.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppInfo.Entity.Debt", b =>
                {
                    b.HasOne("AppInfo.Entity.Flats", "Flats")
                        .WithMany("Debts")
                        .HasForeignKey("FlatNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flats");
                });

            modelBuilder.Entity("AppInfo.Entity.Expenses", b =>
                {
                    b.HasOne("AppInfo.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppInfo.Entity.User", b =>
                {
                    b.HasOne("AppInfo.Entity.Flats", "Flats")
                        .WithMany("Users")
                        .HasForeignKey("FlatNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flats");
                });

            modelBuilder.Entity("AppInfo.Entity.Flats", b =>
                {
                    b.Navigation("Debts");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
